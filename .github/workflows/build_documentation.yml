name: Documentation

on: pull_request

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            generator: "Unix Makefiles"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout EnergyPlus
      uses: actions/checkout@v4
      with:
        repository: 'NREL/EnergyPlus'

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Set up LaTeX on Linux
      if: runner.os == 'Linux'
      run: sudo apt update && sudo apt install -y texlive texlive-xetex texlive-science poppler-utils

    - name: Create Build Environment
      run: cmake -E make_directory ./doc/build

    - name: Configure CMake
      working-directory: ./doc/build
      run: cmake -G "${{ matrix.generator }}" -DTEX_INTERACTION=batchmode -DDOCS_TESTING=ON ..

    - name: Add problem matcher
      run: echo "::add-matcher::.github/workflows/doc-problem-match.json"

    - name: Build Docs
      working-directory: ./doc/build
      run: cmake --build . -j 4

    - name: Upload Acknowledgments
      uses: actions/upload-artifact@v4
      with:
        name: Acknowledgments
        path: ${{ github.workspace }}/doc/build/pdf/Acknowledgments.pdf

    - name: Upload AuxiliaryPrograms
      uses: actions/upload-artifact@v4
      with:
        name: AuxiliaryPrograms
        path: ${{ github.workspace }}/doc/build/pdf/AuxiliaryPrograms.pdf

    - name: Upload EMSApplicationGuide
      uses: actions/upload-artifact@v4
      with:
        name: EMSApplicationGuide
        path: ${{ github.workspace }}/doc/build/pdf/EMSApplicationGuide.pdf

    - name: Upload EnergyPlusEssentials
      uses: actions/upload-artifact@v4
      with:
        name: EnergyPlusEssentials
        path: ${{ github.workspace }}/doc/build/pdf/EnergyPlusEssentials.pdf

    - name: Upload EngineeringReference
      uses: actions/upload-artifact@v4
      with:
        name: EngineeringReference
        path: ${{ github.workspace }}/doc/build/pdf/EngineeringReference.pdf

    - name: Upload ExternalInterfacesApplicationGuide
      uses: actions/upload-artifact@v4
      with:
        name: ExternalInterfacesApplicationGuide
        path: ${{ github.workspace }}/doc/build/pdf/ExternalInterfacesApplicationGuide.pdf

    - name: Upload GettingStarted
      uses: actions/upload-artifact@v4
      with:
        name: GettingStarted
        path: ${{ github.workspace }}/doc/build/pdf/GettingStarted.pdf

    - name: Upload InputOutputReference
      uses: actions/upload-artifact@v4
      with:
        name: InputOutputReference
        path: ${{ github.workspace }}/doc/build/pdf/InputOutputReference.pdf

    - name: Upload InterfaceDeveloper
      uses: actions/upload-artifact@v4
      with:
        name: InterfaceDeveloper
        path: ${{ github.workspace }}/doc/build/pdf/InterfaceDeveloper.pdf

    - name: Upload ModuleDeveloper
      uses: actions/upload-artifact@v4
      with:
        name: ModuleDeveloper
        path: ${{ github.workspace }}/doc/build/pdf/ModuleDeveloper.pdf

    - name: Upload OutputDetailsAndExamples
      uses: actions/upload-artifact@v4
      with:
        name: OutputDetailsAndExamples
        path: ${{ github.workspace }}/doc/build/pdf/OutputDetailsAndExamples.pdf

    - name: Upload PlantApplicationGuide
      uses: actions/upload-artifact@v4
      with:
        name: PlantApplicationGuide
        path: ${{ github.workspace }}/doc/build/pdf/PlantApplicationGuide.pdf

    - name: Upload UsingEnergyPlusForCompliance
      uses: actions/upload-artifact@v4
      with:
        name: UsingEnergyPlusForCompliance
        path: ${{ github.workspace }}/doc/build/pdf/UsingEnergyPlusForCompliance.pdf

    - name: Upload entire pdf folder
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: AllDocumentation
        path: ${{ github.workspace }}/doc/build/pdf/

    - name: Upload log folder upon failure
      if: failure() && runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: Xelatex_Logs_after_all
        path: C:\Users\runneradmin\AppData\Local\MiKTeX\miktex\log\

#    - name: Test
#      working-directory: ${{runner.workspace}}/build
#      shell: bash
#      # Execute tests defined by the CMake configuration.
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      # run: ctest -C $BUILD_TYPE
#      run: ls
