name: Mac Build

on: pull_request

env:
  shell: bash
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build_and_test:
    runs-on: ${{ matrix.os }}
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            generator: "Unix Makefiles"
            nproc: 3
            build_target: all
          - os: macos-14
            generator: "Unix Makefiles"
            nproc: 3
            build_target: all
          - os: ubuntu-latest
            generator: "Unix Makefiles"
            nproc: 4
            build_target: all
          - os: windows-2019
            generator: "Visual Studio 16 2019"
            nproc: 4
            build_target: ALL_BUILD
          - os: windows-2022
            generator: "Visual Studio 17 2022"
            nproc: 4
            build_target: ALL_BUILD

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Create Build Directory
        run: cmake -E make_directory ./build/

      - name: Configure CMake
        working-directory: ./build
        run: cmake -G "${{ matrix.generator }}" -DBUILD_TYPE=Release ../

      - name: Build
        working-directory: ./build
        run: cmake --build . -j ${{ matrix.nproc }} --config Release --target ${{ matrix.build_target }}

      - name: Run Tests
        working-directory: ./build
        id: test
        run: ctest -C Release

      - name: Generate Regression Bundle
        if: always()
        id: regressions
        run: python build_regression_bundle.py ${{ matrix.os }}

      - uses: actions/upload-artifact@v4
        if: always() && steps.regressions.outcome == 'failure'
        with:
          name: "regressions-${{ matrix.os }}"
          path: "${{ github.workspace }}/build/regressions"

      - uses: actions/github-script@v7
        if: always() && steps.regressions.outcome == 'failure'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Diffs encountered on build ${{ matrix.os }}"
            })

      - name: Try a warning
        if: always() && matrix.os == 'windows-2019'
        run: |
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp,line=8::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp,line=10::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"
          echo "::warning file=main.cpp::ESO Small Diffs"

      - name: Report Failure if Tests or Regressions Failed
        if: always() && steps.test.outcome == 'failure' && steps.regressions.outcome == 'failure'
        run: exit 1

#      - name: Try an error
#        if: ${{ matrix.os == 'macos-12' }}
#        run: |
#          echo "::error file=main.cpp,line=8::ESO Big Diffs"
#          exit 1
